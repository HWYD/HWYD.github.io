"use strict";(self.webpackChunkmyBlog=self.webpackChunkmyBlog||[]).push([[607],{6638:(n,s,a)=>{a.r(s),a.d(s,{data:()=>p});const p={key:"v-6a42bced",path:"/blogs/threejs-blogs/threejs.html",title:"",lang:"zh-CN",frontmatter:{},excerpt:"",headers:[],filePathRelative:"blogs/threejs-blogs/threejs.md",git:{updatedTime:1630654075e3,contributors:[{name:"HWYD",email:"1165203865@qq.com",commits:1}]}}},3914:(n,s,a)=>{a.r(s),a.d(s,{default:()=>e});const p=(0,a(6252).uE)('<h5 id="一个三维模型的渲染由几个主要的模块组成" tabindex="-1"><a class="header-anchor" href="#一个三维模型的渲染由几个主要的模块组成" aria-hidden="true">#</a> 一个三维模型的渲染由几个主要的模块组成</h5><ul><li>渲染器:WebGLRenderer,用来承载场景的，需要挂载DOM节点</li><li>场景：scene,这个是用来放置物体、灯光和摄像机的地方。</li><li>相机：camera,相机能看到什么，浏览器就展示什么</li><li>灯光：light,这是光源，可以设置各种灯光，如果没有灯光，那么可能黑乎乎的，看不到物体。 <strong>个人觉得三维模型渲染可以想象成现实生活场景。</strong></li></ul><p>一个模型加载到呈现的流程大致如下：</p><p>新建渲染器：</p><div class="language-javascript ext-js line-numbers-mode"><pre class="language-javascript"><code>renderer <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">THREE<span class="token punctuation">.</span>WebGLRenderer</span><span class="token punctuation">(</span><span class="token punctuation">)</span>\n</code></pre><div class="line-numbers"><span class="line-number">1</span><br></div></div><p>新建场景</p><div class="language-javascript ext-js line-numbers-mode"><pre class="language-javascript"><code><span class="token keyword">const</span> scene <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">THREE<span class="token punctuation">.</span>Scene</span><span class="token punctuation">(</span><span class="token punctuation">)</span>  <span class="token comment">//后面的模型，灯光都需要添加进这场景中</span>\n</code></pre><div class="line-numbers"><span class="line-number">1</span><br></div></div><p>添加相机</p><div class="language-javascript ext-js line-numbers-mode"><pre class="language-javascript"><code><span class="token keyword">const</span> camera <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">THREE<span class="token punctuation">.</span>PerspectiveCamera</span><span class="token punctuation">(</span><span class="token number">45</span><span class="token punctuation">,</span> window<span class="token punctuation">.</span>innerWidth <span class="token operator">/</span> window<span class="token punctuation">.</span>innerHeight<span class="token punctuation">,</span> <span class="token number">0.1</span><span class="token punctuation">,</span> <span class="token number">100000</span><span class="token punctuation">)</span>\n</code></pre><div class="line-numbers"><span class="line-number">1</span><br></div></div><p>添加轨道控制器</p><div class="language-javascript ext-js line-numbers-mode"><pre class="language-javascript"><code>controls <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">OrbitControls</span><span class="token punctuation">(</span>camera<span class="token punctuation">,</span> renderer<span class="token punctuation">.</span>domElement<span class="token punctuation">)</span>  <span class="token comment">//renderer.domElement是挂载的DOM</span>\n<span class="token comment">//可以理解轨道控制器装着相机，可以控制相机的旋转移动等</span>\n</code></pre><div class="line-numbers"><span class="line-number">1</span><br><span class="line-number">2</span><br></div></div><p>模型加载</p><div class="language-javascript ext-js line-numbers-mode"><pre class="language-javascript"><code><span class="token keyword">const</span> loader <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">GLTFLoader</span><span class="token punctuation">(</span><span class="token punctuation">)</span>\n<span class="token keyword">const</span> dracoLoader <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">DRACOLoader</span><span class="token punctuation">(</span><span class="token punctuation">)</span>\n      dracoLoader<span class="token punctuation">.</span><span class="token function">setDecoderPath</span><span class="token punctuation">(</span><span class="token string">&#39;gltf-pipeline路径&#39;</span><span class="token punctuation">)</span>  <span class="token comment">//本地要放public文件夹，也可放云端</span>\n      loader<span class="token punctuation">.</span><span class="token function">setDRACOLoader</span><span class="token punctuation">(</span>dracoLoader<span class="token punctuation">)</span>\n      loader<span class="token punctuation">.</span><span class="token function">load</span><span class="token punctuation">(</span><span class="token string">&#39;模型地址&#39;</span><span class="token function">，</span><span class="token punctuation">(</span><span class="token parameter">gltf</span><span class="token punctuation">)</span> <span class="token operator">=&gt;</span> <span class="token punctuation">{</span>\n        modelData <span class="token operator">=</span> gltf<span class="token punctuation">.</span>scene\n        scene<span class="token punctuation">.</span><span class="token function">add</span><span class="token punctuation">(</span>modelData<span class="token punctuation">)</span>   <span class="token comment">//模型数据要添加到场景scene中才能显示</span>\n      <span class="token punctuation">}</span><span class="token punctuation">,</span> <span class="token punctuation">(</span><span class="token parameter">val</span><span class="token punctuation">)</span> <span class="token operator">=&gt;</span> <span class="token punctuation">{</span>\n        <span class="token keyword">const</span> loadProgress <span class="token operator">=</span> <span class="token punctuation">(</span>val<span class="token punctuation">.</span>loaded <span class="token operator">/</span> val<span class="token punctuation">.</span>total<span class="token punctuation">)</span> <span class="token operator">*</span> <span class="token number">100</span>\n        <span class="token comment">//这里可以做模型加载进度的操作，如loading</span>\n      <span class="token punctuation">}</span><span class="token punctuation">)</span>\n    <span class="token punctuation">}</span><span class="token punctuation">,</span>\n\n</code></pre><div class="line-numbers"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br><span class="line-number">8</span><br><span class="line-number">9</span><br><span class="line-number">10</span><br><span class="line-number">11</span><br><span class="line-number">12</span><br><span class="line-number">13</span><br></div></div><p>添加灯光</p><div class="language-javascript ext-js line-numbers-mode"><pre class="language-javascript"><code><span class="token keyword">const</span> ambient <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">THREE<span class="token punctuation">.</span>AmbientLight</span><span class="token punctuation">(</span><span class="token string">&#39;#FFFFFF&#39;</span><span class="token punctuation">)</span>\nscene<span class="token punctuation">.</span><span class="token function">add</span><span class="token punctuation">(</span>ambient<span class="token punctuation">)</span> \n</code></pre><div class="line-numbers"><span class="line-number">1</span><br><span class="line-number">2</span><br></div></div><p>记录一下遇到的一些小问题：</p><h5 id="_1、把模型加载进去后-浏览器显示一篇空白-也没有报错" tabindex="-1"><a class="header-anchor" href="#_1、把模型加载进去后-浏览器显示一篇空白-也没有报错" aria-hidden="true">#</a> 1、把模型加载进去后，浏览器显示一篇空白，也没有报错？</h5><p>一般是相机没有对准物体，或相机离太近导致穿模，或者太远导致看到的物体太小，这个时候需要设置相机位置来调整模型物体的距离。忘记添加灯光也有可能导致看不到哦!</p><h5 id="_2、当屏幕大小变化时。要让模型物体居中-并且让模型一开始一定比例展示出来" tabindex="-1"><a class="header-anchor" href="#_2、当屏幕大小变化时。要让模型物体居中-并且让模型一开始一定比例展示出来" aria-hidden="true">#</a> 2、当屏幕大小变化时。要让模型物体居中，并且让模型一开始一定比例展示出来</h5><p>要通过设置相机的位置，从而实现模型的居中和初次渲染的显示大小比例，相机的位置可以通过模型的长度，然后分别设置相机的x,y,z轴的位置</p><div class="language-javascript ext-js line-numbers-mode"><pre class="language-javascript"><code><span class="token keyword">const</span> box3 <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">THREE<span class="token punctuation">.</span>Box3</span><span class="token punctuation">(</span><span class="token punctuation">)</span>\n      box3<span class="token punctuation">.</span><span class="token function">expandByObject</span><span class="token punctuation">(</span>model<span class="token punctuation">)</span>    <span class="token comment">//新建一个Box3包裹盒把模型包裹起来</span>\n<span class="token keyword">const</span> center <span class="token operator">=</span> box3<span class="token punctuation">.</span><span class="token function">getCenter</span><span class="token punctuation">(</span><span class="token punctuation">)</span>     <span class="token comment">//获取模型的中心点</span>\n<span class="token keyword">const</span> modelSize <span class="token operator">=</span> box3<span class="token punctuation">.</span><span class="token function">getSize</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">length</span><span class="token punctuation">(</span><span class="token punctuation">)</span>  <span class="token comment">//综合计算出模型的长度值，利用它设置相机位置</span>\ncamera<span class="token punctuation">.</span>position<span class="token punctuation">.</span><span class="token function">set</span><span class="token punctuation">(</span>modelSize <span class="token operator">/</span> <span class="token number">6</span><span class="token punctuation">,</span> modelSize <span class="token operator">/</span> <span class="token number">6</span><span class="token punctuation">,</span> modelSize <span class="token operator">/</span> <span class="token number">6</span><span class="token punctuation">)</span> <span class="token comment">//根据情况设置相机距离</span>\ncamera<span class="token punctuation">.</span><span class="token function">lookAt</span><span class="token punctuation">(</span>center<span class="token punctuation">)</span>  <span class="token comment">//让相机一直看向模型</span>\n</code></pre><div class="line-numbers"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br></div></div><h5 id="_3、当模型放大可能形成穿透-如何解决" tabindex="-1"><a class="header-anchor" href="#_3、当模型放大可能形成穿透-如何解决" aria-hidden="true">#</a> 3、当模型放大可能形成穿透，如何解决？</h5><p>通过设置minDIstance(允许相机向前移动多少)，来让相机镜头和模型保持一个不会穿透的距离，距离可以通过获取模型的长度，然后设置这个距离为长度的多少倍</p><div class="language-javascript ext-js line-numbers-mode"><pre class="language-javascript"><code>controls<span class="token punctuation">.</span>minDistance <span class="token operator">=</span> modelSize <span class="token operator">/</span> <span class="token number">10</span>  <span class="token comment">//设置相机的可放置的最近最远距离</span>\ncontrols<span class="token punctuation">.</span>maxDistance <span class="token operator">=</span> modelSize <span class="token operator">/</span> <span class="token number">2</span>   <span class="token comment">//modelSzie为上面计算模型的长度值，比例根据情况设置</span>\n</code></pre><div class="line-numbers"><span class="line-number">1</span><br><span class="line-number">2</span><br></div></div><h5 id="_4、同一个组件-例如vue-切换模型-加载不同模型-时遇到的一点小问题。" tabindex="-1"><a class="header-anchor" href="#_4、同一个组件-例如vue-切换模型-加载不同模型-时遇到的一点小问题。" aria-hidden="true">#</a> 4、同一个组件(例如vue)切换模型(加载不同模型)时遇到的一点小问题。</h5><ul><li>最初始的部分如渲染器，灯光，场景初始化可以只执行一次，其他需要销毁重新加载，不然累计加载，会造成渲染异常(几个模型同时存在，多重灯光变凉等)和浪费内存。</li><li>之前的动画函数还在调用执行，再进行调用的话，动画的频率会加大，导致动画很快，所以要及时解绑函数</li></ul><div class="language-javascript ext-js line-numbers-mode"><pre class="language-javascript"><code>watch<span class="token operator">:</span> <span class="token punctuation">{</span>\n    <span class="token function">modelUrl</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>\n      <span class="token function">cancelAnimationFrame</span><span class="token punctuation">(</span>reqAF<span class="token punctuation">)</span>  <span class="token comment">//这里的reqAF是上个模型用到的动画reqAF = requestAnimationFrame(这里是动画函数名）</span>\n      scene<span class="token punctuation">.</span><span class="token function">remove</span><span class="token punctuation">(</span>modelData<span class="token punctuation">,</span> tipGroup<span class="token punctuation">,</span> coneGroup<span class="token punctuation">)</span> <span class="token comment">//前面场景是add()添加，这里用remove移除前面添加的模型，灯光等。不然之前的会累加，导致多个模型或者重复灯光(会变很亮)。</span>\n    <span class="token punctuation">}</span>\n  <span class="token punctuation">}</span><span class="token punctuation">,</span>\n</code></pre><div class="line-numbers"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br></div></div>',27),e={render:function(n,s){return p}}}}]);