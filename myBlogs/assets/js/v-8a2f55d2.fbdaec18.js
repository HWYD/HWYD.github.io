"use strict";(self.webpackChunkmyBlog=self.webpackChunkmyBlog||[]).push([[690],{4293:(n,s,a)=>{a.r(s),a.d(s,{data:()=>e});const e={key:"v-8a2f55d2",path:"/notes/webpack-study.html",title:"",lang:"zh-CN",frontmatter:{lastUpdated:!1},excerpt:"",headers:[{level:2,title:"webpack是什么？",slug:"webpack是什么",children:[]},{level:2,title:"模块引入规范",slug:"模块引入规范",children:[]},{level:2,title:"安装webpack",slug:"安装webpack",children:[{level:3,title:"全局安装(不推荐，只能用一个版本号)",slug:"全局安装-不推荐-只能用一个版本号",children:[]},{level:3,title:"项目内安装",slug:"项目内安装",children:[]}]},{level:2,title:"提升webpack打包速度",slug:"提升webpack打包速度",children:[]},{level:2,title:"webpack的配置文件",slug:"webpack的配置文件",children:[]},{level:2,title:"运行webpack打包命令",slug:"运行webpack打包命令",children:[]},{level:2,title:"loader",slug:"loader",children:[{level:3,title:"file-loader做了哪些事情",slug:"file-loader做了哪些事情",children:[]},{level:3,title:"url-loader",slug:"url-loader",children:[]},{level:3,title:"css资源打包的loader",slug:"css资源打包的loader",children:[]}]},{level:2,title:"plugins",slug:"plugins",children:[]},{level:2,title:"sourceMap",slug:"sourcemap",children:[{level:3,title:"eval:是最快的一种打包方式",slug:"eval-是最快的一种打包方式",children:[]}]},{level:2,title:"监听代码改变自动打包三种方法",slug:"监听代码改变自动打包三种方法",children:[]},{level:2,title:"WebpackDevServer",slug:"webpackdevserver",children:[]},{level:2,title:"Hot Module Replacement 热模块更新",slug:"hot-module-replacement-热模块更新",children:[]},{level:2,title:"使用babel处理es6语法",slug:"使用babel处理es6语法",children:[{level:3,title:"@babel/polyfill",slug:"babel-polyfill",children:[]}]},{level:2,title:"Tree Shaking",slug:"tree-shaking",children:[]},{level:2,title:"Development和Production模式的区分打包",slug:"development和production模式的区分打包",children:[]},{level:2,title:"webpack 和 code Splitting代码分割",slug:"webpack-和-code-splitting代码分割",children:[]},{level:2,title:"打包时不分割代码与分割代码",slug:"打包时不分割代码与分割代码",children:[]},{level:2,title:"css文件的代码分割",slug:"css文件的代码分割",children:[]},{level:2,title:"webpack与浏览器缓存",slug:"webpack与浏览器缓存",children:[]},{level:2,title:"shimming的作用(垫片)",slug:"shimming的作用-垫片",children:[]}],filePathRelative:"notes/webpack-study.md",git:{updatedTime:1636989631e3,contributors:[{name:"HWYD",email:"1165203865@qq.com",commits:2}]}}},7891:(n,s,a)=>{a.r(s),a.d(s,{default:()=>p});const e=(0,a(6252).uE)('<h2 id="webpack是什么" tabindex="-1"><a class="header-anchor" href="#webpack是什么" aria-hidden="true">#</a> webpack是什么？</h2><p>webpack是一个模块打包工具，和webpack相似的工具有：grunt、gulp、browserify</p><h2 id="模块引入规范" tabindex="-1"><a class="header-anchor" href="#模块引入规范" aria-hidden="true">#</a> 模块引入规范</h2><ul><li>ES Moudule 模块引入方式</li></ul><div class="language-javascript ext-js line-numbers-mode"><pre class="language-javascript"><code><span class="token keyword">import</span> Header <span class="token keyword">from</span> <span class="token string">&#39;./header.js&#39;</span>\n</code></pre><div class="line-numbers"><span class="line-number">1</span><br></div></div><ul><li>CommonJS 模块引入规范</li></ul><div class="language-javascript ext-js line-numbers-mode"><pre class="language-javascript"><code><span class="token keyword">const</span> Header <span class="token operator">=</span> <span class="token function">require</span><span class="token punctuation">(</span><span class="token string">&#39;./header.js&#39;</span><span class="token punctuation">)</span>\n</code></pre><div class="line-numbers"><span class="line-number">1</span><br></div></div><ul><li>CMD</li><li>AMD</li></ul><h2 id="安装webpack" tabindex="-1"><a class="header-anchor" href="#安装webpack" aria-hidden="true">#</a> 安装webpack</h2><h3 id="全局安装-不推荐-只能用一个版本号" tabindex="-1"><a class="header-anchor" href="#全局安装-不推荐-只能用一个版本号" aria-hidden="true">#</a> 全局安装(不推荐，只能用一个版本号)</h3><p><code>npm install webpack webpack-cli -g</code></p><ul><li>使用：webpack index.js</li></ul><h3 id="项目内安装" tabindex="-1"><a class="header-anchor" href="#项目内安装" aria-hidden="true">#</a> 项目内安装</h3><p><code>npm install webpack webpack-cli -- save-dev</code></p><ul><li>使用：npx webpack index.js</li></ul><h2 id="提升webpack打包速度" tabindex="-1"><a class="header-anchor" href="#提升webpack打包速度" aria-hidden="true">#</a> 提升webpack打包速度</h2><ul><li><p>保持node版本尽量的新</p></li><li><p>webpack版本尽量的新</p></li></ul><h2 id="webpack的配置文件" tabindex="-1"><a class="header-anchor" href="#webpack的配置文件" aria-hidden="true">#</a> webpack的配置文件</h2><ul><li>webpack.config.js(默认文件名)</li></ul><div class="language-javascript ext-js line-numbers-mode"><pre class="language-javascript"><code> module<span class="token punctuation">.</span>exports <span class="token operator">=</span> <span class="token punctuation">{</span>\n\n      entry<span class="token operator">:</span> <span class="token string">&#39;./src/index.js&#39;</span><span class="token punctuation">,</span> <span class="token comment">//从哪个文件开始打包</span>\n\n      output<span class="token operator">:</span><span class="token punctuation">{</span> <span class="token comment">//打包的文件放在哪里</span>\n\n      filename<span class="token operator">:</span> <span class="token string">&#39;bundle.js&#39;</span><span class="token punctuation">,</span> <span class="token comment">//打包文件名</span>\n\n      path<span class="token operator">:</span> path<span class="token punctuation">.</span><span class="token function">resolve</span><span class="token punctuation">(</span>_dirname<span class="token punctuation">,</span> <span class="token string">&#39;dist&#39;</span><span class="token punctuation">)</span> <span class="token comment">//放在哪个文件夹下</span>\n\n     <span class="token punctuation">}</span>\n\n <span class="token punctuation">}</span>\n</code></pre><div class="line-numbers"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br><span class="line-number">8</span><br><span class="line-number">9</span><br><span class="line-number">10</span><br><span class="line-number">11</span><br><span class="line-number">12</span><br><span class="line-number">13</span><br></div></div><ul><li>没有webpack.config.js文件</li></ul><div class="language-javascript ext-js line-numbers-mode"><pre class="language-javascript"><code> 使用webpack本身自带的默认配置\n</code></pre><div class="line-numbers"><span class="line-number">1</span><br></div></div><ul><li>其他命名的配置文件(如webpackset.js)</li></ul><div class="language-javascript ext-js line-numbers-mode"><pre class="language-javascript"><code> npx webpack <span class="token operator">--</span> config webpackset<span class="token punctuation">.</span><span class="token function">js</span> <span class="token punctuation">(</span>跟默认文件名不同<span class="token punctuation">)</span>\n</code></pre><div class="line-numbers"><span class="line-number">1</span><br></div></div><h2 id="运行webpack打包命令" tabindex="-1"><a class="header-anchor" href="#运行webpack打包命令" aria-hidden="true">#</a> 运行webpack打包命令</h2><ul><li>global</li></ul><div class="language-javascript ext-js line-numbers-mode"><pre class="language-javascript"><code>webpack index<span class="token punctuation">.</span>js\n</code></pre><div class="line-numbers"><span class="line-number">1</span><br></div></div><ul><li>项目内</li></ul><div class="language-javascript ext-js line-numbers-mode"><pre class="language-javascript"><code>npx webpack index<span class="token punctuation">.</span>js\n</code></pre><div class="line-numbers"><span class="line-number">1</span><br></div></div><ul><li>配置package.json中的scripts选项然后进行打包，如：</li></ul><div class="language-javascript ext-js line-numbers-mode"><pre class="language-javascript"><code>npm run bundle <span class="token operator">-</span><span class="token operator">&gt;</span> webpack\n</code></pre><div class="line-numbers"><span class="line-number">1</span><br></div></div><h2 id="loader" tabindex="-1"><a class="header-anchor" href="#loader" aria-hidden="true">#</a> <strong>loader</strong></h2><blockquote><p>用来识别处理非js文件,是一种打包方案</p></blockquote><div class="language-javascript ext-js line-numbers-mode"><pre class="language-javascript"><code>   module<span class="token operator">:</span><span class="token punctuation">{</span>\n\n      rules<span class="token operator">:</span> <span class="token punctuation">[</span><span class="token punctuation">{</span>\n\n      test<span class="token operator">:</span> <span class="token regex"><span class="token regex-delimiter">/</span><span class="token regex-source language-regex">\\.jpg$</span><span class="token regex-delimiter">/</span></span><span class="token punctuation">,</span>\n\n       use<span class="token operator">:</span> <span class="token punctuation">{</span> loader<span class="token operator">:</span> <span class="token string">&quot;file-loader&quot;</span> <span class="token punctuation">}</span>\n\n      <span class="token punctuation">}</span><span class="token punctuation">]</span>\n   <span class="token punctuation">}</span>\n</code></pre><div class="line-numbers"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br><span class="line-number">8</span><br><span class="line-number">9</span><br><span class="line-number">10</span><br></div></div><h3 id="file-loader做了哪些事情" tabindex="-1"><a class="header-anchor" href="#file-loader做了哪些事情" aria-hidden="true">#</a> file-loader做了哪些事情</h3><h4 id="比如当发现引入了图片模块的时候-首先会把图片移动到dist目录下-会改名字-可自定义-返回图片的地址-理论上可以处理任何静态资源" tabindex="-1"><a class="header-anchor" href="#比如当发现引入了图片模块的时候-首先会把图片移动到dist目录下-会改名字-可自定义-返回图片的地址-理论上可以处理任何静态资源" aria-hidden="true">#</a> 比如当发现引入了图片模块的时候，首先会把图片移动到dist目录下， 会改名字(可自定义)，返回图片的地址，理论上可以处理任何静态资源</h4><h4 id="可以配置一些参数-options" tabindex="-1"><a class="header-anchor" href="#可以配置一些参数-options" aria-hidden="true">#</a> 可以配置一些参数：options</h4><div class="language-javascript ext-js line-numbers-mode"><pre class="language-javascript"><code>   rules<span class="token operator">:</span><span class="token punctuation">[</span>\n  <span class="token punctuation">{</span>\n\n      test<span class="token operator">:</span><span class="token regex"><span class="token regex-delimiter">/</span><span class="token regex-source language-regex">\\.jpg$</span><span class="token regex-delimiter">/</span></span><span class="token punctuation">,</span>\n\n       use<span class="token operator">:</span><span class="token punctuation">{</span>\n\n      loader<span class="token operator">:</span><span class="token string">&#39;url-loader&#39;</span><span class="token punctuation">,</span>\n\n      options<span class="token operator">:</span><span class="token punctuation">{</span>\n\n       name<span class="token operator">:</span><span class="token string">&#39;[name]_[hash].[ext]&#39;</span><span class="token punctuation">,</span> <span class="token comment">// name: ‘[name].[ext]’ // 占位符 老图片的名字，老图片的后缀</span>\n\n       outputPath<span class="token operator">:</span><span class="token string">&#39;images/&#39;</span><span class="token punctuation">,</span>\n\n       limit<span class="token operator">:</span><span class="token string">&#39;204800&#39;</span>\n\n  <span class="token punctuation">}</span>\n  <span class="token punctuation">}</span>\n  <span class="token punctuation">}</span><span class="token punctuation">]</span>\n\n</code></pre><div class="line-numbers"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br><span class="line-number">8</span><br><span class="line-number">9</span><br><span class="line-number">10</span><br><span class="line-number">11</span><br><span class="line-number">12</span><br><span class="line-number">13</span><br><span class="line-number">14</span><br><span class="line-number">15</span><br><span class="line-number">16</span><br><span class="line-number">17</span><br><span class="line-number">18</span><br><span class="line-number">19</span><br><span class="line-number">20</span><br><span class="line-number">21</span><br></div></div><h3 id="url-loader" tabindex="-1"><a class="header-anchor" href="#url-loader" aria-hidden="true">#</a> url-loader</h3><ul><li><strong>会把图片转为base64文件放在js文件中</strong></li><li><strong>好处：节省了图片的http请求</strong></li><li><strong>坏处，使得js文件变大，使页面加载变慢</strong></li></ul><div class="language-javascript ext-js line-numbers-mode"><pre class="language-javascript"><code>   module<span class="token punctuation">.</span>exports <span class="token operator">=</span> <span class="token punctuation">{</span>\n\n   mode<span class="token operator">:</span> <span class="token string">&#39;development&#39;</span><span class="token punctuation">,</span>\n\n   entry<span class="token operator">:</span><span class="token punctuation">{</span>\n\n   main <span class="token operator">:</span> <span class="token string">&#39;./src/index.js&#39;</span>\n\n   <span class="token punctuation">}</span><span class="token punctuation">,</span>\n\n  module<span class="token operator">:</span><span class="token punctuation">{</span>\n\n  rules<span class="token operator">:</span><span class="token punctuation">[</span><span class="token punctuation">{</span>\n\n   test<span class="token operator">:</span> <span class="token regex"><span class="token regex-delimiter">/</span><span class="token regex-source language-regex">\\.(jpg|png|gif)$</span><span class="token regex-delimiter">/</span></span><span class="token punctuation">,</span>\n\n   use<span class="token operator">:</span><span class="token punctuation">{</span>\n\n  loader <span class="token operator">:</span> <span class="token string">&#39;url-loader&#39;</span><span class="token punctuation">,</span>\n\n   options <span class="token operator">:</span> <span class="token punctuation">{</span>\n\n   name<span class="token operator">:</span> <span class="token string">&#39;[name]_[hash].ext&#39;</span><span class="token punctuation">,</span>\n\n  outputPath<span class="token operator">:</span> <span class="token string">&#39;images/&#39;</span><span class="token punctuation">,</span>\n\n  limit<span class="token operator">:</span> <span class="token number">2048</span> <span class="token comment">//小于2048个字节的话使用url-loader变成base64的字符串，否则生成文件</span>\n   <span class="token punctuation">}</span>\n   <span class="token punctuation">}</span>\n  <span class="token punctuation">}</span><span class="token punctuation">]</span>\n  <span class="token punctuation">}</span>\n  <span class="token punctuation">}</span>\n</code></pre><div class="line-numbers"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br><span class="line-number">8</span><br><span class="line-number">9</span><br><span class="line-number">10</span><br><span class="line-number">11</span><br><span class="line-number">12</span><br><span class="line-number">13</span><br><span class="line-number">14</span><br><span class="line-number">15</span><br><span class="line-number">16</span><br><span class="line-number">17</span><br><span class="line-number">18</span><br><span class="line-number">19</span><br><span class="line-number">20</span><br><span class="line-number">21</span><br><span class="line-number">22</span><br><span class="line-number">23</span><br><span class="line-number">24</span><br><span class="line-number">25</span><br><span class="line-number">26</span><br><span class="line-number">27</span><br><span class="line-number">28</span><br><span class="line-number">29</span><br><span class="line-number">30</span><br><span class="line-number">31</span><br><span class="line-number">32</span><br></div></div><h3 id="css资源打包的loader" tabindex="-1"><a class="header-anchor" href="#css资源打包的loader" aria-hidden="true">#</a> css资源打包的loader</h3><ul><li><p>css-loader 和 style-loader css-loader配合style-loader去处理打包</p></li><li><p>css预处理器loader 使用css预处理器时需要安装对应的css预处理器loader，如sass需要安装node-sass 和 node-sass</p></li><li><p>css添加厂商前缀的loader：postcss-loader</p></li><li><p>css打包模块化：各个css文件互不影响，互不耦合和冲突</p></li></ul><h2 id="plugins" tabindex="-1"><a class="header-anchor" href="#plugins" aria-hidden="true">#</a> <strong>plugins</strong></h2><blockquote><p>可以在webpack 运行到某个时刻的时候，帮你做一些事情</p></blockquote><ul><li>htmlWebpackPlugin 会在打包结束后，自动生成一个html文件，并把打包生成的js自动引入到这个html文件中</li><li>clean-webpack-plugin 第三方插件，用于打包成功前清空dist文件夹</li></ul><div class="language-javascript ext-js line-numbers-mode"><pre class="language-javascript"><code>   plugins<span class="token operator">:</span> <span class="token punctuation">[</span><span class="token keyword">new</span> <span class="token class-name">HtmlWebpackPlugin</span><span class="token punctuation">(</span><span class="token punctuation">{</span>\n\n   template<span class="token operator">:</span><span class="token string">&#39;./index.html&#39;</span>\n\n   <span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">,</span> <span class="token keyword">new</span> <span class="token class-name">CleanWebpackPlugin</span><span class="token punctuation">(</span><span class="token punctuation">[</span><span class="token string">&#39;dist&#39;</span><span class="token punctuation">]</span><span class="token punctuation">)</span> <span class="token punctuation">]</span>\n</code></pre><div class="line-numbers"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br></div></div><h2 id="sourcemap" tabindex="-1"><a class="header-anchor" href="#sourcemap" aria-hidden="true">#</a> <strong>sourceMap</strong></h2><p>它是一个映射关系，默认是被配置的，假如它知道dist目录下main.js文件96行出错了，实际上对应的是src目录下index.js文件中的第一行它会帮你提示当前其实是index.js中第一行代码出错了</p><ul><li>最佳组合：可以知道源代码出错的地方，而不是打包后的代码哪里出错了</li></ul><div class="language-javascript ext-js line-numbers-mode"><pre class="language-javascript"><code>   module<span class="token punctuation">.</span>exports <span class="token operator">=</span><span class="token punctuation">{</span>\n\n   mode<span class="token operator">:</span><span class="token string">&#39;development&#39;</span><span class="token punctuation">,</span>\n\n   devtool<span class="token operator">:</span><span class="token string">&#39;cheap-module-eval-source-map&#39;</span><span class="token punctuation">,</span>\n\n   <span class="token comment">// devtool:&#39;cheap-module-source-map&#39;, //线上的生产环境</span>\n\n   <span class="token punctuation">}</span>\n\n</code></pre><div class="line-numbers"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br><span class="line-number">8</span><br><span class="line-number">9</span><br><span class="line-number">10</span><br></div></div><h3 id="eval-是最快的一种打包方式" tabindex="-1"><a class="header-anchor" href="#eval-是最快的一种打包方式" aria-hidden="true">#</a> eval:是最快的一种打包方式</h3><h2 id="监听代码改变自动打包三种方法" tabindex="-1"><a class="header-anchor" href="#监听代码改变自动打包三种方法" aria-hidden="true">#</a> 监听代码改变自动打包三种方法</h2><ol><li>package.json添加命令</li></ol><div class="language-javascript ext-js line-numbers-mode"><pre class="language-javascript"><code>   <span class="token string">&quot;scripts&quot;</span><span class="token operator">:</span> <span class="token punctuation">{</span>\n   <span class="token string">&quot;bundle&quot;</span><span class="token operator">:</span> <span class="token string">&quot;webpack --watch&quot;</span><span class="token punctuation">,</span>\n   <span class="token punctuation">}</span><span class="token punctuation">,</span>\n</code></pre><div class="line-numbers"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br></div></div><ol start="2"><li>使用WebpackDevServer</li></ol><div class="language-javascript ext-js line-numbers-mode"><pre class="language-javascript"><code>   module<span class="token punctuation">.</span>exports <span class="token operator">=</span><span class="token punctuation">{</span>\n   devServer<span class="token operator">:</span><span class="token punctuation">{</span>\n   contentBase<span class="token operator">:</span><span class="token string">&#39;./dist&#39;</span><span class="token punctuation">,</span>\n   open<span class="token operator">:</span><span class="token boolean">true</span><span class="token punctuation">,</span>\n   port<span class="token operator">:</span><span class="token number">8081</span>\n  <span class="token punctuation">}</span><span class="token punctuation">}</span>\n</code></pre><div class="line-numbers"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br></div></div><ol start="3"><li>自己写一个类似WebpackDevServer的方法</li></ol><h2 id="webpackdevserver" tabindex="-1"><a class="header-anchor" href="#webpackdevserver" aria-hidden="true">#</a> WebpackDevServer</h2><blockquote><p>监听代码改变自动打包并刷新，开启web服务器，可以进行ajax请求</p></blockquote><div class="language-javascript ext-js line-numbers-mode"><pre class="language-javascript"><code>   module<span class="token punctuation">.</span>exports <span class="token operator">=</span><span class="token punctuation">{</span>\n   devServer<span class="token operator">:</span><span class="token punctuation">{</span>\n   contentBase<span class="token operator">:</span><span class="token string">&#39;./dist&#39;</span><span class="token punctuation">,</span>\n   open<span class="token operator">:</span><span class="token boolean">true</span><span class="token punctuation">,</span>\n   port<span class="token operator">:</span><span class="token number">8081</span>\n  <span class="token punctuation">}</span><span class="token punctuation">}</span>\n</code></pre><div class="line-numbers"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br></div></div><h2 id="hot-module-replacement-热模块更新" tabindex="-1"><a class="header-anchor" href="#hot-module-replacement-热模块更新" aria-hidden="true">#</a> Hot Module Replacement 热模块更新</h2><div class="language-javascript ext-js line-numbers-mode"><pre class="language-javascript"><code><span class="token comment">//  webpack.config.js</span>\n<span class="token keyword">const</span> path <span class="token operator">=</span> <span class="token function">require</span><span class="token punctuation">(</span><span class="token string">&#39;path&#39;</span><span class="token punctuation">)</span>\n<span class="token keyword">const</span> HtmlWebpackPlugin <span class="token operator">=</span> <span class="token function">require</span><span class="token punctuation">(</span><span class="token string">&#39;html-webpack-plugin&#39;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>\n<span class="token keyword">const</span> CleanWebpackPlugin <span class="token operator">=</span> <span class="token function">require</span><span class="token punctuation">(</span><span class="token string">&#39;clean-webpack-plugin&#39;</span><span class="token punctuation">)</span>\n<span class="token keyword">const</span> webpack <span class="token operator">=</span> <span class="token function">require</span><span class="token punctuation">(</span><span class="token string">&#39;webpack&#39;</span><span class="token punctuation">)</span>\nmodule<span class="token punctuation">.</span>exports <span class="token operator">=</span><span class="token punctuation">{</span>\nmode<span class="token operator">:</span><span class="token string">&#39;development&#39;</span><span class="token punctuation">,</span>\ndevtool<span class="token operator">:</span><span class="token string">&#39;cheap-module-eval-source-map&#39;</span><span class="token punctuation">,</span>\nentry<span class="token operator">:</span> <span class="token punctuation">{</span>\nmain<span class="token operator">:</span><span class="token string">&#39;./src/index.js&#39;</span><span class="token punctuation">,</span>\n    <span class="token punctuation">}</span><span class="token punctuation">,</span>\ndevServer<span class="token operator">:</span><span class="token punctuation">{</span>\ncontentBase<span class="token operator">:</span><span class="token string">&#39;./dist&#39;</span><span class="token punctuation">,</span>\nopen<span class="token operator">:</span><span class="token boolean">true</span><span class="token punctuation">,</span>\nport<span class="token operator">:</span><span class="token number">8081</span><span class="token punctuation">,</span>\nhot<span class="token operator">:</span><span class="token boolean">true</span><span class="token punctuation">,</span>\nhotOnly<span class="token operator">:</span><span class="token boolean">true</span>\n    <span class="token punctuation">}</span><span class="token punctuation">,</span>\nmodule<span class="token operator">:</span><span class="token punctuation">{</span>\nrules<span class="token operator">:</span><span class="token punctuation">[</span>\n        <span class="token punctuation">{</span>\ntest<span class="token operator">:</span><span class="token regex"><span class="token regex-delimiter">/</span><span class="token regex-source language-regex">\\.jpg$</span><span class="token regex-delimiter">/</span></span><span class="token punctuation">,</span>\nuse<span class="token operator">:</span><span class="token punctuation">{</span>\nloader<span class="token operator">:</span><span class="token string">&#39;url-loader&#39;</span><span class="token punctuation">,</span>\noptions<span class="token operator">:</span><span class="token punctuation">{</span>\nname<span class="token operator">:</span><span class="token string">&#39;[name]_[hash].[ext]&#39;</span><span class="token punctuation">,</span>\noutputPath<span class="token operator">:</span><span class="token string">&#39;images/&#39;</span><span class="token punctuation">,</span>\nlimit<span class="token operator">:</span><span class="token string">&#39;204800&#39;</span>\n            <span class="token punctuation">}</span>\n          <span class="token punctuation">}</span>\n        <span class="token punctuation">}</span><span class="token punctuation">,</span>\n    <span class="token punctuation">{</span>\ntest<span class="token operator">:</span><span class="token regex"><span class="token regex-delimiter">/</span><span class="token regex-source language-regex">\\.(eot|ttf|svg)$</span><span class="token regex-delimiter">/</span></span><span class="token punctuation">,</span>\nuse<span class="token operator">:</span><span class="token punctuation">{</span>\nloader<span class="token operator">:</span><span class="token string">&#39;file-loader&#39;</span><span class="token punctuation">,</span>\n      <span class="token punctuation">}</span>\n    <span class="token punctuation">}</span><span class="token punctuation">,</span>\n    <span class="token punctuation">{</span>\ntest<span class="token operator">:</span><span class="token regex"><span class="token regex-delimiter">/</span><span class="token regex-source language-regex">\\.css$</span><span class="token regex-delimiter">/</span></span><span class="token punctuation">,</span>\nuse<span class="token operator">:</span><span class="token punctuation">[</span><span class="token string">&#39;style-loader&#39;</span><span class="token punctuation">,</span>\n<span class="token string">&#39;css-loader&#39;</span><span class="token punctuation">,</span>\n<span class="token string">&#39;postcss-loader&#39;</span>\n      <span class="token punctuation">]</span>\n    <span class="token punctuation">}</span><span class="token punctuation">,</span>\n    <span class="token punctuation">{</span>\ntest<span class="token operator">:</span><span class="token regex"><span class="token regex-delimiter">/</span><span class="token regex-source language-regex">\\.scss$</span><span class="token regex-delimiter">/</span></span><span class="token punctuation">,</span>\nuse<span class="token operator">:</span><span class="token punctuation">[</span><span class="token string">&#39;style-loader&#39;</span><span class="token punctuation">,</span>\n      <span class="token punctuation">{</span>\nloader<span class="token operator">:</span><span class="token string">&#39;css-loader&#39;</span><span class="token punctuation">,</span>\noptions<span class="token operator">:</span><span class="token punctuation">{</span>\nimportLoaders<span class="token operator">:</span><span class="token number">2</span><span class="token punctuation">,</span>\n<span class="token comment">// modules:true</span>\n        <span class="token punctuation">}</span>\n      <span class="token punctuation">}</span><span class="token punctuation">,</span>\n<span class="token string">&#39;sass-loader&#39;</span><span class="token punctuation">,</span>\n<span class="token string">&#39;postcss-loader&#39;</span>\n      <span class="token punctuation">]</span>\n    <span class="token punctuation">}</span>\n      <span class="token punctuation">]</span>\n    <span class="token punctuation">}</span><span class="token punctuation">,</span>\nplugins<span class="token operator">:</span> <span class="token punctuation">[</span><span class="token keyword">new</span> <span class="token class-name">HtmlWebpackPlugin</span><span class="token punctuation">(</span><span class="token punctuation">{</span>\ntemplate<span class="token operator">:</span><span class="token string">&#39;./index.html&#39;</span>\n    <span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">,</span> <span class="token keyword">new</span> <span class="token class-name">CleanWebpackPlugin</span><span class="token punctuation">(</span><span class="token punctuation">[</span><span class="token string">&#39;dist&#39;</span><span class="token punctuation">]</span><span class="token punctuation">)</span><span class="token punctuation">,</span>\n<span class="token keyword">new</span> <span class="token class-name">webpack<span class="token punctuation">.</span>HotModuleReplacementPlugin</span><span class="token punctuation">(</span><span class="token punctuation">)</span>\n  <span class="token punctuation">]</span><span class="token punctuation">,</span>\noutput<span class="token operator">:</span> <span class="token punctuation">{</span>\nfilename<span class="token operator">:</span> <span class="token string">&#39;[name].js&#39;</span><span class="token punctuation">,</span>\npath<span class="token operator">:</span> path<span class="token punctuation">.</span><span class="token function">resolve</span><span class="token punctuation">(</span>__dirname<span class="token punctuation">,</span><span class="token string">&#39;dist&#39;</span><span class="token punctuation">)</span>\n    <span class="token punctuation">}</span>\n<span class="token punctuation">}</span>\n\n</code></pre><div class="line-numbers"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br><span class="line-number">8</span><br><span class="line-number">9</span><br><span class="line-number">10</span><br><span class="line-number">11</span><br><span class="line-number">12</span><br><span class="line-number">13</span><br><span class="line-number">14</span><br><span class="line-number">15</span><br><span class="line-number">16</span><br><span class="line-number">17</span><br><span class="line-number">18</span><br><span class="line-number">19</span><br><span class="line-number">20</span><br><span class="line-number">21</span><br><span class="line-number">22</span><br><span class="line-number">23</span><br><span class="line-number">24</span><br><span class="line-number">25</span><br><span class="line-number">26</span><br><span class="line-number">27</span><br><span class="line-number">28</span><br><span class="line-number">29</span><br><span class="line-number">30</span><br><span class="line-number">31</span><br><span class="line-number">32</span><br><span class="line-number">33</span><br><span class="line-number">34</span><br><span class="line-number">35</span><br><span class="line-number">36</span><br><span class="line-number">37</span><br><span class="line-number">38</span><br><span class="line-number">39</span><br><span class="line-number">40</span><br><span class="line-number">41</span><br><span class="line-number">42</span><br><span class="line-number">43</span><br><span class="line-number">44</span><br><span class="line-number">45</span><br><span class="line-number">46</span><br><span class="line-number">47</span><br><span class="line-number">48</span><br><span class="line-number">49</span><br><span class="line-number">50</span><br><span class="line-number">51</span><br><span class="line-number">52</span><br><span class="line-number">53</span><br><span class="line-number">54</span><br><span class="line-number">55</span><br><span class="line-number">56</span><br><span class="line-number">57</span><br><span class="line-number">58</span><br><span class="line-number">59</span><br><span class="line-number">60</span><br><span class="line-number">61</span><br><span class="line-number">62</span><br><span class="line-number">63</span><br><span class="line-number">64</span><br><span class="line-number">65</span><br><span class="line-number">66</span><br><span class="line-number">67</span><br><span class="line-number">68</span><br><span class="line-number">69</span><br><span class="line-number">70</span><br><span class="line-number">71</span><br></div></div><p>模块化之间互不影响</p><div class="language-javascript ext-js line-numbers-mode"><pre class="language-javascript"><code><span class="token keyword">if</span><span class="token punctuation">(</span>module<span class="token punctuation">.</span>hot<span class="token punctuation">)</span><span class="token punctuation">{</span>\n  module<span class="token punctuation">.</span>hot<span class="token punctuation">.</span><span class="token function">accept</span><span class="token punctuation">(</span><span class="token string">&#39;./number&#39;</span><span class="token punctuation">,</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token operator">=&gt;</span><span class="token punctuation">{</span>\n  document<span class="token punctuation">.</span>body<span class="token punctuation">.</span><span class="token function">removeChild</span><span class="token punctuation">(</span>document<span class="token punctuation">.</span><span class="token function">getElementById</span><span class="token punctuation">(</span><span class="token string">&#39;number&#39;</span><span class="token punctuation">)</span><span class="token punctuation">)</span>\n  <span class="token function">number</span><span class="token punctuation">(</span><span class="token punctuation">)</span>\n    <span class="token punctuation">}</span><span class="token punctuation">)</span>\n  <span class="token punctuation">}</span>\n</code></pre><div class="line-numbers"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br></div></div><h2 id="使用babel处理es6语法" tabindex="-1"><a class="header-anchor" href="#使用babel处理es6语法" aria-hidden="true">#</a> 使用babel处理es6语法</h2><blockquote><p>babel-loader、babel\\core 将es6转为es5语法 @babel/preset-env</p></blockquote><h3 id="babel-polyfill" tabindex="-1"><a class="header-anchor" href="#babel-polyfill" aria-hidden="true">#</a> @babel/polyfill</h3><p>处理低版本浏览器没有的一些语法和特性，添加对象的方法，如promise之类的 根据业务代码按需添加特性方法，减少代码体积,需要添加配置项</p><div class="language-javascript ext-js line-numbers-mode"><pre class="language-javascript"><code>module<span class="token operator">:</span><span class="token punctuation">{</span>\n  rules<span class="token operator">:</span><span class="token punctuation">[</span>\n          <span class="token punctuation">{</span>\n  test<span class="token operator">:</span><span class="token regex"><span class="token regex-delimiter">/</span><span class="token regex-source language-regex">\\.js$</span><span class="token regex-delimiter">/</span></span><span class="token punctuation">,</span>\n  exclude<span class="token operator">:</span> <span class="token regex"><span class="token regex-delimiter">/</span><span class="token regex-source language-regex">node_modules</span><span class="token regex-delimiter">/</span></span><span class="token punctuation">,</span>\n  loader<span class="token operator">:</span> <span class="token string">&quot;babel-loader&quot;</span><span class="token punctuation">,</span>\n  options<span class="token operator">:</span> <span class="token punctuation">{</span>\n  presets<span class="token operator">:</span> <span class="token punctuation">[</span><span class="token punctuation">[</span><span class="token string">&#39;@babel/preset-env&#39;</span><span class="token punctuation">,</span>\n             <span class="token punctuation">{</span> useBuiltIns <span class="token operator">:</span> <span class="token string">&#39;usage&#39;</span> <span class="token punctuation">}</span>\n          <span class="token punctuation">]</span><span class="token punctuation">]</span>\n     <span class="token punctuation">}</span> <span class="token punctuation">}</span><span class="token punctuation">,</span><span class="token punctuation">]</span><span class="token punctuation">}</span>\n</code></pre><div class="line-numbers"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br><span class="line-number">8</span><br><span class="line-number">9</span><br><span class="line-number">10</span><br><span class="line-number">11</span><br></div></div><p>可以配置兼容到浏览器的哪个版本</p><div class="language-javascript ext-js line-numbers-mode"><pre class="language-javascript"><code><span class="token punctuation">{</span>\n  test<span class="token operator">:</span><span class="token regex"><span class="token regex-delimiter">/</span><span class="token regex-source language-regex">\\.js$</span><span class="token regex-delimiter">/</span></span><span class="token punctuation">,</span>\n  exclude<span class="token operator">:</span> <span class="token regex"><span class="token regex-delimiter">/</span><span class="token regex-source language-regex">node_modules</span><span class="token regex-delimiter">/</span></span><span class="token punctuation">,</span>\n  loader<span class="token operator">:</span> <span class="token string">&quot;babel-loader&quot;</span><span class="token punctuation">,</span>\n  options<span class="token operator">:</span> <span class="token punctuation">{</span>\n  presets<span class="token operator">:</span> <span class="token punctuation">[</span><span class="token punctuation">[</span><span class="token string">&#39;@babel/preset-env&#39;</span><span class="token punctuation">,</span>\n             <span class="token punctuation">{</span> \n  targets<span class="token operator">:</span><span class="token punctuation">{</span> \n  chrome <span class="token operator">:</span> <span class="token string">&quot;67&quot;</span>\n                 <span class="token punctuation">}</span><span class="token punctuation">,</span>\n  useBuiltIns <span class="token operator">:</span> <span class="token string">&#39;usage&#39;</span> \n             <span class="token punctuation">}</span>\n          <span class="token punctuation">]</span><span class="token punctuation">]</span>\n            <span class="token punctuation">}</span>\n          <span class="token punctuation">}</span><span class="token punctuation">,</span>\n</code></pre><div class="line-numbers"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br><span class="line-number">8</span><br><span class="line-number">9</span><br><span class="line-number">10</span><br><span class="line-number">11</span><br><span class="line-number">12</span><br><span class="line-number">13</span><br><span class="line-number">14</span><br><span class="line-number">15</span><br></div></div><p>@babel/plugin-transform-runtime</p><div class="language-javascript ext-js line-numbers-mode"><pre class="language-javascript"><code><span class="token punctuation">{</span>\n  test<span class="token operator">:</span><span class="token regex"><span class="token regex-delimiter">/</span><span class="token regex-source language-regex">\\.js$</span><span class="token regex-delimiter">/</span></span><span class="token punctuation">,</span>\n  exclude<span class="token operator">:</span> <span class="token regex"><span class="token regex-delimiter">/</span><span class="token regex-source language-regex">node_modules</span><span class="token regex-delimiter">/</span></span><span class="token punctuation">,</span>\n  loader<span class="token operator">:</span> <span class="token string">&quot;babel-loader&quot;</span><span class="token punctuation">,</span>\n  options<span class="token operator">:</span> <span class="token punctuation">{</span>\n  <span class="token comment">//业务代码配置</span>\n  <span class="token comment">//     presets: [[&#39;@babel/preset-env&#39;,</span>\n  <span class="token comment">//    { </span>\n  <span class="token comment">//      targets:{ </span>\n  <span class="token comment">//        chrome : &quot;67&quot;</span>\n  <span class="token comment">//        },</span>\n  <span class="token comment">//     useBuiltIns : &#39;usage&#39; </span>\n  <span class="token comment">//    }</span>\n  <span class="token comment">// ]]</span>\n  <span class="token comment">// 库代码配置</span>\n<span class="token string">&quot;plugins&quot;</span><span class="token operator">:</span> <span class="token punctuation">[</span>\n  <span class="token punctuation">[</span>\n<span class="token string">&quot;@babel/plugin-transform-runtime&quot;</span><span class="token punctuation">,</span>\n    <span class="token punctuation">{</span>\n<span class="token string">&quot;corejs&quot;</span><span class="token operator">:</span> <span class="token number">2</span><span class="token punctuation">,</span>\n<span class="token string">&quot;helpers&quot;</span><span class="token operator">:</span> <span class="token boolean">true</span><span class="token punctuation">,</span>\n<span class="token string">&quot;regenerator&quot;</span><span class="token operator">:</span> <span class="token boolean">true</span><span class="token punctuation">,</span>\n<span class="token string">&quot;useESModules&quot;</span><span class="token operator">:</span> <span class="token boolean">false</span>\n    <span class="token punctuation">}</span>\n  <span class="token punctuation">]</span>\n<span class="token punctuation">]</span>\n  <span class="token punctuation">}</span>\n<span class="token punctuation">}</span><span class="token punctuation">,</span>\n</code></pre><div class="line-numbers"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br><span class="line-number">8</span><br><span class="line-number">9</span><br><span class="line-number">10</span><br><span class="line-number">11</span><br><span class="line-number">12</span><br><span class="line-number">13</span><br><span class="line-number">14</span><br><span class="line-number">15</span><br><span class="line-number">16</span><br><span class="line-number">17</span><br><span class="line-number">18</span><br><span class="line-number">19</span><br><span class="line-number">20</span><br><span class="line-number">21</span><br><span class="line-number">22</span><br><span class="line-number">23</span><br><span class="line-number">24</span><br><span class="line-number">25</span><br><span class="line-number">26</span><br><span class="line-number">27</span><br><span class="line-number">28</span><br></div></div><p>babel配置内容过多时候，使用.babelrc放options配置</p><h2 id="tree-shaking" tabindex="-1"><a class="header-anchor" href="#tree-shaking" aria-hidden="true">#</a> Tree Shaking</h2><blockquote><p>打包的时候去除没有引用的模块，只支持 ES Module 静态引入的方法，CommonJs是动态引入的</p></blockquote><div class="language-javascript ext-js line-numbers-mode"><pre class="language-javascript"><code><span class="token comment">// webpack.config.js</span>\noptimization<span class="token operator">:</span><span class="token punctuation">{</span>                     <span class="token comment">// 生产模式下可以不写</span>\n  usedExports <span class="token operator">:</span> <span class="token boolean">true</span>\n    <span class="token punctuation">}</span><span class="token punctuation">,</span>\n<span class="token comment">// package.json</span>\n<span class="token string">&quot;sideEffects&quot;</span><span class="token operator">:</span> <span class="token boolean">false</span><span class="token punctuation">,</span>  \n<span class="token string">&quot;sideEffects&quot;</span><span class="token operator">:</span> <span class="token punctuation">[</span><span class="token string">&quot;*.css&quot;</span><span class="token punctuation">]</span>      <span class="token comment">//如果需要忽略哪些模块，让哪些模块不被Tree Shaking，用数组表示</span>\n</code></pre><div class="line-numbers"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br></div></div><h2 id="development和production模式的区分打包" tabindex="-1"><a class="header-anchor" href="#development和production模式的区分打包" aria-hidden="true">#</a> Development和Production模式的区分打包</h2><ul><li>可以分生产模式和开发模式两个js配置文件</li><li>避免重复代码，还可以分三个文件，一个共用的，一个生产模式，一个开发模式 需要使用webpack-merge 进行合并</li></ul><ol><li>开发环境 需要使用webpack-dev-server 方便我们进行开发</li><li>生产环境 需要对sourcemap 进行精简，代码进行压缩</li></ol><h2 id="webpack-和-code-splitting代码分割" tabindex="-1"><a class="header-anchor" href="#webpack-和-code-splitting代码分割" aria-hidden="true">#</a> webpack 和 code Splitting代码分割</h2><p>代码分割，和webpack无关 webpack 中实现代码分割，两种方式</p><ul><li>同步代码：只需要在webpack.common.js中做optimization 的配置</li></ul><div class="language-javascript ext-js line-numbers-mode"><pre class="language-javascript"><code>optimization<span class="token operator">:</span><span class="token punctuation">{</span>\n  splitChunks<span class="token operator">:</span><span class="token punctuation">{</span>\n  chunks<span class="token operator">:</span>all\n      <span class="token punctuation">}</span>\n    <span class="token punctuation">}</span><span class="token punctuation">,</span>\n</code></pre><div class="line-numbers"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br></div></div><ul><li>异步代码(import)：异步代码，无需做任何配置，会自动进行代码分割 ，放置到新的文件中。</li></ul><h2 id="打包时不分割代码与分割代码" tabindex="-1"><a class="header-anchor" href="#打包时不分割代码与分割代码" aria-hidden="true">#</a> 打包时不分割代码与分割代码</h2><ul><li>不分割 假设首次访问页面时，main.js 2mb 打包文件会很大，加载main.js(2mb) 当页面业务逻辑发生变化时，又要加载 2mb的内容</li><li>分割代码 main.js被拆分为 lodash.js(1mb)，main.js(1mb) 当页面业务逻辑发生变化时，只要加载main.js即可(1mb)</li></ul><h2 id="css文件的代码分割" tabindex="-1"><a class="header-anchor" href="#css文件的代码分割" aria-hidden="true">#</a> css文件的代码分割</h2><div class="language-javascript ext-js line-numbers-mode"><pre class="language-javascript"><code>output <span class="token operator">:</span> <span class="token punctuation">{</span>\n  filename <span class="token operator">:</span>  <span class="token string">&#39;[name].js&#39;</span><span class="token punctuation">,</span>       <span class="token comment">//直接被引用走这里</span>\n  chunckFilename <span class="token operator">:</span> <span class="token string">&#39;[name].chunk.js&#39;</span>         <span class="token comment">// 间接被引用走这里</span>\n<span class="token punctuation">}</span>\n</code></pre><div class="line-numbers"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br></div></div><p>mini-css-extract-plugin: 在生产环境配置 在开发环境不配置，因为暂时没有热更新功能，需要手动刷新，影响开发速度(缺陷)</p><h2 id="webpack与浏览器缓存" tabindex="-1"><a class="header-anchor" href="#webpack与浏览器缓存" aria-hidden="true">#</a> webpack与浏览器缓存</h2><blockquote><p>如果不是强制刷新，请求的文件名字相同将不会重新请求,需要给打包生成的文件进行哈希值命名</p></blockquote><div class="language-javascript ext-js line-numbers-mode"><pre class="language-javascript"><code>output<span class="token operator">:</span><span class="token punctuation">{</span>\n  filename<span class="token operator">:</span> <span class="token string">&#39;[name].[contenthash].js&#39;</span><span class="token punctuation">,</span>\n  chunkFilename<span class="token operator">:</span> <span class="token string">&#39;[name].[contenthash].js&#39;</span><span class="token punctuation">,</span>\n      <span class="token punctuation">}</span>\n</code></pre><div class="line-numbers"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br></div></div><h2 id="shimming的作用-垫片" tabindex="-1"><a class="header-anchor" href="#shimming的作用-垫片" aria-hidden="true">#</a> shimming的作用(垫片)</h2><blockquote><p>修改webpack原有的一些行为，或者webpack原有不能实现的行为,代码兼容，打包过程兼容 有些低版本浏览器可能没有promise这些方法，导致程序无法进行，借助babelprofill，这也叫shimming的作用</p></blockquote><div class="language-javascript ext-js line-numbers-mode"><pre class="language-javascript"><code><span class="token keyword">const</span> webpack <span class="token operator">=</span> <span class="token function">require</span><span class="token punctuation">(</span><span class="token string">&#39;webpack&#39;</span><span class="token punctuation">)</span>\n        plugins<span class="token operator">:</span> <span class="token punctuation">[</span>\n        <span class="token keyword">new</span> <span class="token class-name">webpack<span class="token punctuation">.</span>ProvidePlugin</span><span class="token punctuation">(</span><span class="token punctuation">{</span>\n        $<span class="token operator">:</span><span class="token string">&#39;jquery&#39;</span>                         <span class="token comment">//帮一些古老的插件，如jq，当使用$这个符号时，自动帮忙import jquery插件</span>\n        _<span class="token operator">:</span><span class="token string">&#39;lodash&#39;</span>\n          <span class="token punctuation">}</span><span class="token punctuation">)</span>\n          <span class="token punctuation">]</span><span class="token punctuation">,</span>\n</code></pre><div class="line-numbers"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br></div></div>',97),p={render:function(n,s){return e}}}}]);