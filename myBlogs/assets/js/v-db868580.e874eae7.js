"use strict";(self.webpackChunkmyBlog=self.webpackChunkmyBlog||[]).push([[756],{4829:(n,s,a)=>{a.r(s),a.d(s,{data:()=>p});const p={key:"v-db868580",path:"/blogs/vue-blogs/dynamic-router-menu.html",title:"",lang:"zh-CN",frontmatter:{theme:"channing-cyan"},excerpt:"",headers:[{level:3,title:"动态路由",slug:"动态路由",children:[]},{level:3,title:"动态侧边菜单栏",slug:"动态侧边菜单栏",children:[]}],filePathRelative:"blogs/vue-blogs/dynamic-router-menu.md",git:{updatedTime:1644934606e3,contributors:[{name:"HWYD",email:"1165203865@qq.com",commits:1}]}}},4434:(n,s,a)=>{a.r(s),a.d(s,{default:()=>t});const p=(0,a(6252).uE)('<h4 id="前言" tabindex="-1"><a class="header-anchor" href="#前言" aria-hidden="true">#</a> 前言</h4><p>在做Vue管理系统的时候，都会遇到的一个需求：每个用户的权限是不一样的，那么他可以访问的页面(路由)，可以操作的菜单选项是不一样的，如果由后端控制，我们前端需要去实现动态路由，动态渲染侧边菜单栏。</p><h3 id="动态路由" tabindex="-1"><a class="header-anchor" href="#动态路由" aria-hidden="true">#</a> 动态路由</h3><ul><li>在本示例管理系统中，由于每个用户的权限不一样，拥有的可以访问的路由页面也不一样，用户能访问的路由页面都是后端根据权限动态配置的</li><li>我们前端需要根据后端接口返回的路由表去动态增删路由，从而生成这个用户所拥有的路由。</li></ul><h5 id="重点-实现动态路由api" tabindex="-1"><a class="header-anchor" href="#重点-实现动态路由api" aria-hidden="true">#</a> 重点：实现动态路由api</h5><ul><li>router.addRoute() //应用程序已经运行的时候添加路由</li><li>router.removeRoute() // 应用程序已经运行的时候删除路由</li></ul><h4 id="定义共用的页面路由-无论哪个用户都会有的" tabindex="-1"><a class="header-anchor" href="#定义共用的页面路由-无论哪个用户都会有的" aria-hidden="true">#</a> 定义共用的页面路由(无论哪个用户都会有的)</h4><p>如无论什么用户都可访问登录页login，错误页面404。</p><div class="language-javascript ext-js line-numbers-mode"><pre class="language-javascript"><code><span class="token keyword">import</span> <span class="token punctuation">{</span> createRouter<span class="token punctuation">,</span> createWebHashHistory <span class="token punctuation">}</span> <span class="token keyword">from</span> <span class="token string">&#39;vue-router&#39;</span>\n\n<span class="token keyword">const</span> publicRoutes <span class="token operator">=</span> <span class="token punctuation">[</span>\n  <span class="token punctuation">{</span>\n    path<span class="token operator">:</span> <span class="token string">&#39;/&#39;</span><span class="token punctuation">,</span>\n    redirect<span class="token operator">:</span> <span class="token punctuation">{</span> path<span class="token operator">:</span> <span class="token string">&#39;/login&#39;</span> <span class="token punctuation">}</span>\n  <span class="token punctuation">}</span><span class="token punctuation">,</span>\n  <span class="token punctuation">{</span>\n    path<span class="token operator">:</span> <span class="token string">&#39;/login&#39;</span><span class="token punctuation">,</span>\n    name<span class="token operator">:</span> <span class="token string">&#39;login&#39;</span><span class="token punctuation">,</span>\n    <span class="token function-variable function">component</span><span class="token operator">:</span> <span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">=&gt;</span> <span class="token keyword">import</span><span class="token punctuation">(</span><span class="token string">&#39;../views/login&#39;</span><span class="token punctuation">)</span>\n  <span class="token punctuation">}</span><span class="token punctuation">,</span>\n  <span class="token punctuation">{</span>\n    path<span class="token operator">:</span> <span class="token string">&#39;/404&#39;</span><span class="token punctuation">,</span>\n    name<span class="token operator">:</span> <span class="token string">&#39;404&#39;</span><span class="token punctuation">,</span>\n    <span class="token function-variable function">component</span><span class="token operator">:</span> <span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">=&gt;</span> <span class="token keyword">import</span><span class="token punctuation">(</span><span class="token string">&#39;../views/404&#39;</span><span class="token punctuation">)</span>\n  <span class="token punctuation">}</span><span class="token punctuation">,</span>\n  <span class="token punctuation">{</span>\n    path<span class="token operator">:</span> <span class="token string">&#39;/home&#39;</span><span class="token punctuation">,</span>\n    name<span class="token operator">:</span> <span class="token string">&#39;home&#39;</span><span class="token punctuation">,</span>\n    <span class="token function-variable function">component</span><span class="token operator">:</span> <span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">=&gt;</span> <span class="token keyword">import</span><span class="token punctuation">(</span><span class="token string">&#39;../views/home&#39;</span><span class="token punctuation">)</span><span class="token punctuation">,</span>\n    redirect<span class="token operator">:</span> <span class="token string">&#39;/welcome&#39;</span><span class="token punctuation">,</span>\n    children<span class="token operator">:</span> <span class="token punctuation">[</span>\n      <span class="token punctuation">{</span>\n        path<span class="token operator">:</span> <span class="token string">&#39;/:pathMatch(.*)*&#39;</span><span class="token punctuation">,</span>    <span class="token comment">// 捕获所有路由或 404 Not found 路由</span>\n        <span class="token function-variable function">component</span><span class="token operator">:</span> <span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">=&gt;</span> <span class="token keyword">import</span><span class="token punctuation">(</span><span class="token string">&#39;../views/welcome&#39;</span><span class="token punctuation">)</span>\n      <span class="token punctuation">}</span>\n    <span class="token punctuation">]</span>\n  <span class="token punctuation">}</span>\n<span class="token punctuation">]</span>\n\n<span class="token keyword">const</span> router <span class="token operator">=</span> <span class="token function">createRouter</span><span class="token punctuation">(</span><span class="token punctuation">{</span>\n  history<span class="token operator">:</span> <span class="token function">createWebHashHistory</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">,</span>\n  routes<span class="token operator">:</span> publicRoutes\n<span class="token punctuation">}</span><span class="token punctuation">)</span>\n\n<span class="token keyword">export</span> <span class="token keyword">default</span> router\n</code></pre><div class="line-numbers"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br><span class="line-number">8</span><br><span class="line-number">9</span><br><span class="line-number">10</span><br><span class="line-number">11</span><br><span class="line-number">12</span><br><span class="line-number">13</span><br><span class="line-number">14</span><br><span class="line-number">15</span><br><span class="line-number">16</span><br><span class="line-number">17</span><br><span class="line-number">18</span><br><span class="line-number">19</span><br><span class="line-number">20</span><br><span class="line-number">21</span><br><span class="line-number">22</span><br><span class="line-number">23</span><br><span class="line-number">24</span><br><span class="line-number">25</span><br><span class="line-number">26</span><br><span class="line-number">27</span><br><span class="line-number">28</span><br><span class="line-number">29</span><br><span class="line-number">30</span><br><span class="line-number">31</span><br><span class="line-number">32</span><br><span class="line-number">33</span><br><span class="line-number">34</span><br><span class="line-number">35</span><br><span class="line-number">36</span><br><span class="line-number">37</span><br></div></div><h4 id="接口数据-这里模拟接口的路由数据-这里进行数据精简-便于演示-实际情况可能要进行数据结构格式的转换" tabindex="-1"><a class="header-anchor" href="#接口数据-这里模拟接口的路由数据-这里进行数据精简-便于演示-实际情况可能要进行数据结构格式的转换" aria-hidden="true">#</a> 接口数据：这里模拟接口的路由数据(这里进行数据精简，便于演示，实际情况可能要进行数据结构格式的转换)</h4><div class="language-javascript ext-js line-numbers-mode"><pre class="language-javascript"><code>navigationList <span class="token operator">:</span> <span class="token punctuation">[</span>\n     <span class="token punctuation">{</span>\n        id<span class="token operator">:</span> <span class="token number">1</span><span class="token punctuation">,</span>\n        icon<span class="token operator">:</span> <span class="token string">&#39;icon-jurassic_user&#39;</span><span class="token punctuation">,</span>\n        name<span class="token operator">:</span> <span class="token string">&#39;用户管理&#39;</span><span class="token punctuation">,</span>\n        url<span class="token operator">:</span> <span class="token string">&#39;/user&#39;</span>\n    <span class="token punctuation">}</span><span class="token punctuation">,</span>\n     <span class="token punctuation">{</span>\n        id<span class="token operator">:</span> <span class="token number">2</span><span class="token punctuation">,</span>\n        icon<span class="token operator">:</span> <span class="token string">&#39;icon-jurassic_user&#39;</span><span class="token punctuation">,</span>\n        name<span class="token operator">:</span> <span class="token string">&#39;角色管理&#39;</span><span class="token punctuation">,</span>\n        url<span class="token operator">:</span> <span class="token string">&#39;/role&#39;</span>\n     <span class="token punctuation">}</span><span class="token punctuation">,</span>\n     <span class="token punctuation">{</span>\n        id<span class="token operator">:</span> <span class="token number">3</span><span class="token punctuation">,</span>\n        icon<span class="token operator">:</span> <span class="token string">&#39;icon-shebei&#39;</span><span class="token punctuation">,</span>\n        name<span class="token operator">:</span> <span class="token string">&#39;设备管理&#39;</span><span class="token punctuation">,</span>\n        url<span class="token operator">:</span> <span class="token string">&#39;/device&#39;</span>\n      <span class="token punctuation">}</span>\n<span class="token punctuation">]</span>\n\n</code></pre><div class="line-numbers"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br><span class="line-number">8</span><br><span class="line-number">9</span><br><span class="line-number">10</span><br><span class="line-number">11</span><br><span class="line-number">12</span><br><span class="line-number">13</span><br><span class="line-number">14</span><br><span class="line-number">15</span><br><span class="line-number">16</span><br><span class="line-number">17</span><br><span class="line-number">18</span><br><span class="line-number">19</span><br><span class="line-number">20</span><br><span class="line-number">21</span><br></div></div><h4 id="添加动态路由进去的时机-router-beforeeach" tabindex="-1"><a class="header-anchor" href="#添加动态路由进去的时机-router-beforeeach" aria-hidden="true">#</a> 添加动态路由进去的时机(router.beforeEach)</h4><p>利用全局前置守卫router.beforeEach,在跳转路由前先判断是否已经添加过动态路由了，如果没有，则先获取数据进行添加路由。(router.beforeEach也会做登录等拦截，这里省略)</p><div class="language-javascript ext-js line-numbers-mode"><pre class="language-javascript"><code><span class="token keyword">import</span> store <span class="token keyword">from</span> <span class="token string">&#39;@/store&#39;</span>\n<span class="token comment">//这里我用vuex的一个变量 asyncRoutestMark 来标识是否拼接过路由</span>\nrouter<span class="token punctuation">.</span><span class="token function">beforeEach</span><span class="token punctuation">(</span><span class="token punctuation">(</span><span class="token parameter">to<span class="token punctuation">,</span> from<span class="token punctuation">,</span> next</span><span class="token punctuation">)</span> <span class="token operator">=&gt;</span> <span class="token punctuation">{</span>\n    <span class="token keyword">if</span> <span class="token punctuation">(</span><span class="token operator">!</span>store<span class="token punctuation">.</span>state<span class="token punctuation">.</span>asyncRoutestMark<span class="token punctuation">)</span> <span class="token punctuation">{</span>\n        <span class="token comment">// navigationList 是上面模拟接口返回的数据</span>\n        <span class="token comment">// 这里将新的路由都作为 home 的子路由(实际开发根据情况)</span>\n        <span class="token comment">// meta 是存储一些信息，可以用于权限校验或其他</span>\n        navigationList<span class="token punctuation">.</span><span class="token function">forEach</span><span class="token punctuation">(</span> <span class="token parameter">navigation</span> <span class="token operator">=&gt;</span> <span class="token punctuation">{</span>\n          router<span class="token punctuation">.</span><span class="token function">addRoute</span><span class="token punctuation">(</span><span class="token string">&#39;home&#39;</span><span class="token punctuation">,</span> <span class="token punctuation">{</span>\n            path<span class="token operator">:</span> navigation<span class="token punctuation">.</span>url<span class="token punctuation">,</span>\n            meta<span class="token operator">:</span> <span class="token punctuation">{</span> name<span class="token operator">:</span> navigation<span class="token punctuation">.</span>name<span class="token punctuation">,</span> isAsync<span class="token operator">:</span> <span class="token boolean">true</span><span class="token punctuation">,</span> icon<span class="token operator">:</span> navigation<span class="token punctuation">.</span>icon <span class="token punctuation">}</span><span class="token punctuation">,</span>\n            name<span class="token operator">:</span> menu<span class="token punctuation">.</span>url<span class="token punctuation">,</span>\n            <span class="token function-variable function">component</span><span class="token operator">:</span> <span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">=&gt;</span> <span class="token keyword">import</span><span class="token punctuation">(</span><span class="token template-string"><span class="token template-punctuation string">`</span><span class="token string">../views/</span><span class="token interpolation"><span class="token interpolation-punctuation punctuation">${</span>menu<span class="token punctuation">.</span>url<span class="token interpolation-punctuation punctuation">}</span></span><span class="token template-punctuation string">`</span></span><span class="token punctuation">)</span>\n          <span class="token punctuation">}</span><span class="token punctuation">)</span>\n        <span class="token punctuation">}</span><span class="token punctuation">)</span>\n        console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span>router<span class="token punctuation">.</span><span class="token function">getRoutes</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">,</span> <span class="token string">&#39;查看现有路由&#39;</span><span class="token punctuation">)</span>\n        store<span class="token punctuation">.</span><span class="token function">commit</span><span class="token punctuation">(</span><span class="token string">&#39;setAsyncRoutestMark&#39;</span><span class="token punctuation">,</span> <span class="token boolean">true</span><span class="token punctuation">)</span> <span class="token comment">// 添加路由后更改标识为true</span>\n        <span class="token function">next</span><span class="token punctuation">(</span><span class="token punctuation">{</span> <span class="token operator">...</span>to<span class="token punctuation">,</span> replace<span class="token operator">:</span> <span class="token boolean">true</span> <span class="token punctuation">}</span><span class="token punctuation">)</span>     <span class="token comment">//路由进行重定向放行</span>\n    <span class="token punctuation">}</span> <span class="token keyword">else</span> <span class="token punctuation">{</span>\n      <span class="token function">next</span><span class="token punctuation">(</span><span class="token punctuation">)</span>\n    <span class="token punctuation">}</span>\n<span class="token punctuation">}</span><span class="token punctuation">)</span>\n</code></pre><div class="line-numbers"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br><span class="line-number">8</span><br><span class="line-number">9</span><br><span class="line-number">10</span><br><span class="line-number">11</span><br><span class="line-number">12</span><br><span class="line-number">13</span><br><span class="line-number">14</span><br><span class="line-number">15</span><br><span class="line-number">16</span><br><span class="line-number">17</span><br><span class="line-number">18</span><br><span class="line-number">19</span><br><span class="line-number">20</span><br><span class="line-number">21</span><br><span class="line-number">22</span><br></div></div><p>利用router.getRoutes()方法查看现有路由，我们将会看到根据新的路由添加进去了。</p><h5 id="这样我们就实现了动态路由啦" tabindex="-1"><a class="header-anchor" href="#这样我们就实现了动态路由啦" aria-hidden="true">#</a> 这样我们就实现了动态路由啦！</h5><h3 id="动态侧边菜单栏" tabindex="-1"><a class="header-anchor" href="#动态侧边菜单栏" aria-hidden="true">#</a> 动态侧边菜单栏</h3><p><img src="https://p3-juejin.byteimg.com/tos-cn-i-k3u1fbpfcp/c34a009202774e7a8cbe0b830500bd21~tplv-k3u1fbpfcp-watermark.image?" alt="4.png"></p><ul><li>这是我们要实现的效果，根据接口数据动态渲染，不论层级多少都可以自动渲染，一级菜单，二级菜单，三级甚至更多(不过一般最多只到三级哈哈)。</li></ul><p>很多组件库都可以实现这个功能，这里我们将使用 Ant Design of Vue 组件库的内嵌菜单组件(如下图)去实现，有父菜单，子菜单，父级菜单的是用 a-sub-menu 包裹，子菜单的是直接使用 a-menu-item，大家可以去看文档看一下组件的使用。</p><p><img src="https://p3-juejin.byteimg.com/tos-cn-i-k3u1fbpfcp/b8ec53af0cd74ad2ba82f81f055364db~tplv-k3u1fbpfcp-watermark.image?" alt="1.png"></p><h4 id="接口数据-这里模拟接口的菜单数据-实际情况可能要进行数据结构格式的转换" tabindex="-1"><a class="header-anchor" href="#接口数据-这里模拟接口的菜单数据-实际情况可能要进行数据结构格式的转换" aria-hidden="true">#</a> 接口数据：这里模拟接口的菜单数据(实际情况可能要进行数据结构格式的转换)</h4><div class="language-javascript ext-js line-numbers-mode"><pre class="language-javascript"><code>menuList <span class="token operator">:</span><span class="token punctuation">[</span>\n  <span class="token punctuation">{</span>\n    url<span class="token operator">:</span> <span class="token string">&#39;&#39;</span><span class="token punctuation">,</span>\n    name<span class="token operator">:</span> <span class="token string">&#39;人员管理&#39;</span><span class="token punctuation">,</span>\n    icon<span class="token operator">:</span> <span class="token string">&#39;icon-renyuan&#39;</span><span class="token punctuation">,</span>\n    menuId<span class="token operator">:</span> <span class="token number">1</span><span class="token punctuation">,</span>\n    children<span class="token operator">:</span> <span class="token punctuation">[</span>\n      <span class="token punctuation">{</span>\n        url<span class="token operator">:</span> <span class="token string">&#39;/user&#39;</span><span class="token punctuation">,</span>\n        name<span class="token operator">:</span> <span class="token string">&#39;用户管理&#39;</span><span class="token punctuation">,</span>\n        icon<span class="token operator">:</span> <span class="token string">&#39;icon-jurassic_user&#39;</span><span class="token punctuation">,</span>\n        menuId<span class="token operator">:</span> <span class="token number">1001</span><span class="token punctuation">,</span>\n        children<span class="token operator">:</span> <span class="token punctuation">[</span><span class="token punctuation">]</span>\n      <span class="token punctuation">}</span><span class="token punctuation">,</span>\n      <span class="token punctuation">{</span>\n        url<span class="token operator">:</span> <span class="token string">&#39;/role&#39;</span><span class="token punctuation">,</span>\n        name<span class="token operator">:</span> <span class="token string">&#39;角色管理&#39;</span><span class="token punctuation">,</span>\n        icon<span class="token operator">:</span> <span class="token string">&#39;icon-jiaose&#39;</span><span class="token punctuation">,</span>\n        menuId<span class="token operator">:</span> <span class="token number">1002</span><span class="token punctuation">,</span>\n        children<span class="token operator">:</span> <span class="token punctuation">[</span><span class="token punctuation">]</span>\n      <span class="token punctuation">}</span>\n    <span class="token punctuation">]</span>\n  <span class="token punctuation">}</span><span class="token punctuation">,</span>\n  <span class="token punctuation">{</span>\n    url<span class="token operator">:</span> <span class="token string">&#39;/device&#39;</span><span class="token punctuation">,</span>\n    name<span class="token operator">:</span> <span class="token string">&#39;设备管理&#39;</span><span class="token punctuation">,</span>\n    icon<span class="token operator">:</span> <span class="token string">&#39;icon-shebei&#39;</span><span class="token punctuation">,</span>\n    menuId<span class="token operator">:</span> <span class="token number">2</span>\n  <span class="token punctuation">}</span>\n<span class="token punctuation">]</span>\n</code></pre><div class="line-numbers"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br><span class="line-number">8</span><br><span class="line-number">9</span><br><span class="line-number">10</span><br><span class="line-number">11</span><br><span class="line-number">12</span><br><span class="line-number">13</span><br><span class="line-number">14</span><br><span class="line-number">15</span><br><span class="line-number">16</span><br><span class="line-number">17</span><br><span class="line-number">18</span><br><span class="line-number">19</span><br><span class="line-number">20</span><br><span class="line-number">21</span><br><span class="line-number">22</span><br><span class="line-number">23</span><br><span class="line-number">24</span><br><span class="line-number">25</span><br><span class="line-number">26</span><br><span class="line-number">27</span><br><span class="line-number">28</span><br><span class="line-number">29</span><br><span class="line-number">30</span><br></div></div><h4 id="重点-组件递归" tabindex="-1"><a class="header-anchor" href="#重点-组件递归" aria-hidden="true">#</a> 重点：组件递归</h4><p>使用v-for循环菜单数据数组，渲染组件库 ant design of vue的菜单组件，这时分两种情况，</p><ol><li>如果有children,那么渲染a-sub-menu(父级菜单)，并包裹自身组件，把children数据传递给调用的自身组件，也就是递归调用组件自身，那么调用的自身组件就会重复上面逻辑的判断，直到没有children，也就是遇到了第二种情况，结束递归调用。</li><li>如果没有children，那么直接显示 a-menu-item (子菜单)</li></ol><h5 id="下面为菜单组件-组件名为menulist-递归调用的时候要用到组件名-以达到根据不同数据渲染菜单的情况" tabindex="-1"><a class="header-anchor" href="#下面为菜单组件-组件名为menulist-递归调用的时候要用到组件名-以达到根据不同数据渲染菜单的情况" aria-hidden="true">#</a> 下面为菜单组件，组件名为MenuList，递归调用的时候要用到组件名，以达到根据不同数据渲染菜单的情况</h5><h5 id="没有图标版本" tabindex="-1"><a class="header-anchor" href="#没有图标版本" aria-hidden="true">#</a> 没有图标版本</h5><div class="language-javascript ext-js line-numbers-mode"><pre class="language-javascript"><code><span class="token operator">&lt;</span>template<span class="token operator">&gt;</span>\n  <span class="token operator">&lt;</span>template v<span class="token operator">-</span><span class="token keyword">for</span><span class="token operator">=</span><span class="token string">&quot;menu in menuList&quot;</span> <span class="token operator">:</span>key<span class="token operator">=</span><span class="token string">&quot;menu.menuId&quot;</span><span class="token operator">&gt;</span>\n    <span class="token operator">&lt;</span>a<span class="token operator">-</span>sub<span class="token operator">-</span>menu v<span class="token operator">-</span><span class="token keyword">if</span><span class="token operator">=</span><span class="token string">&quot;menu.children &amp;&amp; menu.children.length&quot;</span> <span class="token operator">:</span>key<span class="token operator">=</span><span class="token string">&quot;menu.menuId&quot;</span><span class="token operator">&gt;</span>\n      <span class="token operator">&lt;</span>template #title<span class="token operator">&gt;</span><span class="token punctuation">{</span><span class="token punctuation">{</span> menu<span class="token punctuation">.</span>name <span class="token punctuation">}</span><span class="token punctuation">}</span><span class="token operator">&lt;</span><span class="token operator">/</span>template<span class="token operator">&gt;</span>\n      <span class="token operator">&lt;</span>MenuList <span class="token operator">:</span>menuList<span class="token operator">=</span><span class="token string">&quot;menu.children&quot;</span> <span class="token operator">/</span><span class="token operator">&gt;</span>\n    <span class="token operator">&lt;</span><span class="token operator">/</span>a<span class="token operator">-</span>sub<span class="token operator">-</span>menu<span class="token operator">&gt;</span>\n    <span class="token operator">&lt;</span>a<span class="token operator">-</span>menu<span class="token operator">-</span>item <span class="token operator">:</span>key<span class="token operator">=</span><span class="token string">&quot;menu.menuId&quot;</span> v<span class="token operator">-</span><span class="token keyword">else</span><span class="token operator">&gt;</span>\n      <span class="token operator">&lt;</span>span<span class="token operator">&gt;</span><span class="token punctuation">{</span><span class="token punctuation">{</span> menu<span class="token punctuation">.</span>name <span class="token punctuation">}</span><span class="token punctuation">}</span><span class="token operator">&lt;</span><span class="token operator">/</span>span<span class="token operator">&gt;</span>\n    <span class="token operator">&lt;</span><span class="token operator">/</span>a<span class="token operator">-</span>menu<span class="token operator">-</span>item<span class="token operator">&gt;</span>\n  <span class="token operator">&lt;</span><span class="token operator">/</span>template<span class="token operator">&gt;</span>\n<span class="token operator">&lt;</span><span class="token operator">/</span>template<span class="token operator">&gt;</span>\n<span class="token operator">&lt;</span>script setup<span class="token operator">&gt;</span>\n<span class="token keyword">import</span> <span class="token punctuation">{</span> defineProps <span class="token punctuation">}</span> <span class="token keyword">from</span> <span class="token string">&#39;vue&#39;</span>\n<span class="token function">defineProps</span><span class="token punctuation">(</span><span class="token punctuation">{</span>\n  menuList<span class="token operator">:</span> <span class="token punctuation">{</span>\n    type<span class="token operator">:</span> Array<span class="token punctuation">,</span>\n    <span class="token function-variable function">default</span><span class="token operator">:</span> <span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">=&gt;</span> <span class="token punctuation">[</span><span class="token punctuation">]</span>\n  <span class="token punctuation">}</span>\n<span class="token punctuation">}</span><span class="token punctuation">)</span>\n<span class="token operator">&lt;</span><span class="token operator">/</span>script<span class="token operator">&gt;</span>\n</code></pre><div class="line-numbers"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br><span class="line-number">8</span><br><span class="line-number">9</span><br><span class="line-number">10</span><br><span class="line-number">11</span><br><span class="line-number">12</span><br><span class="line-number">13</span><br><span class="line-number">14</span><br><span class="line-number">15</span><br><span class="line-number">16</span><br><span class="line-number">17</span><br><span class="line-number">18</span><br><span class="line-number">19</span><br><span class="line-number">20</span><br></div></div><p>效果如下 <img src="https://p6-juejin.byteimg.com/tos-cn-i-k3u1fbpfcp/8d8aa53fe1954181b6bd03228b3c5453~tplv-k3u1fbpfcp-watermark.image?" alt="3.png"></p><h5 id="有图标版本" tabindex="-1"><a class="header-anchor" href="#有图标版本" aria-hidden="true">#</a> 有图标版本</h5><p>图标是根据接口数据的icon去匹配的，有多种方法，例如使用iconFont、svg、png，主要是去对应图标的名字，这里使用组件库提供的使用icon的iconFont方法。</p><div class="language-javascript ext-js line-numbers-mode"><pre class="language-javascript"><code><span class="token operator">&lt;</span>template<span class="token operator">&gt;</span>\n  <span class="token operator">&lt;</span>template v<span class="token operator">-</span><span class="token keyword">for</span><span class="token operator">=</span><span class="token string">&quot;menu in menuList&quot;</span> <span class="token operator">:</span>key<span class="token operator">=</span><span class="token string">&quot;menu.menuId&quot;</span><span class="token operator">&gt;</span>\n    <span class="token operator">&lt;</span>a<span class="token operator">-</span>sub<span class="token operator">-</span>menu v<span class="token operator">-</span><span class="token keyword">if</span><span class="token operator">=</span><span class="token string">&quot;menu.children &amp;&amp; menu.children.length&quot;</span> <span class="token operator">:</span>key<span class="token operator">=</span><span class="token string">&quot;menu.menuId&quot;</span><span class="token operator">&gt;</span>\n      <span class="token operator">&lt;</span>template #icon<span class="token operator">&gt;</span>\n        <span class="token operator">&lt;</span>icon<span class="token operator">-</span>font <span class="token operator">:</span>type<span class="token operator">=</span><span class="token string">&quot;menu.icon&quot;</span> <span class="token operator">/</span><span class="token operator">&gt;</span>\n      <span class="token operator">&lt;</span><span class="token operator">/</span>template<span class="token operator">&gt;</span>\n      <span class="token operator">&lt;</span>template #title<span class="token operator">&gt;</span><span class="token punctuation">{</span><span class="token punctuation">{</span> menu<span class="token punctuation">.</span>name <span class="token punctuation">}</span><span class="token punctuation">}</span><span class="token operator">&lt;</span><span class="token operator">/</span>template<span class="token operator">&gt;</span>\n      <span class="token operator">&lt;</span>MenuList <span class="token operator">:</span>menuList<span class="token operator">=</span><span class="token string">&quot;menu.children&quot;</span> <span class="token operator">/</span><span class="token operator">&gt;</span>\n    <span class="token operator">&lt;</span><span class="token operator">/</span>a<span class="token operator">-</span>sub<span class="token operator">-</span>menu<span class="token operator">&gt;</span>\n    <span class="token operator">&lt;</span>a<span class="token operator">-</span>menu<span class="token operator">-</span>item <span class="token operator">:</span>key<span class="token operator">=</span><span class="token string">&quot;menu.menuId&quot;</span> v<span class="token operator">-</span><span class="token keyword">else</span><span class="token operator">&gt;</span>\n      <span class="token operator">&lt;</span>template #icon<span class="token operator">&gt;</span>\n        <span class="token operator">&lt;</span>icon<span class="token operator">-</span>font <span class="token operator">:</span>type<span class="token operator">=</span><span class="token string">&quot;menu.icon&quot;</span> <span class="token operator">/</span><span class="token operator">&gt;</span>\n      <span class="token operator">&lt;</span><span class="token operator">/</span>template<span class="token operator">&gt;</span>\n      <span class="token operator">&lt;</span>span<span class="token operator">&gt;</span><span class="token punctuation">{</span><span class="token punctuation">{</span> menu<span class="token punctuation">.</span>name <span class="token punctuation">}</span><span class="token punctuation">}</span><span class="token operator">&lt;</span><span class="token operator">/</span>span<span class="token operator">&gt;</span>\n    <span class="token operator">&lt;</span><span class="token operator">/</span>a<span class="token operator">-</span>menu<span class="token operator">-</span>item<span class="token operator">&gt;</span>\n  <span class="token operator">&lt;</span><span class="token operator">/</span>template<span class="token operator">&gt;</span>\n<span class="token operator">&lt;</span><span class="token operator">/</span>template<span class="token operator">&gt;</span>\n<span class="token operator">&lt;</span>script setup<span class="token operator">&gt;</span>\n<span class="token keyword">import</span> <span class="token punctuation">{</span> defineProps <span class="token punctuation">}</span> <span class="token keyword">from</span> <span class="token string">&#39;vue&#39;</span>\n<span class="token keyword">import</span> <span class="token punctuation">{</span> createFromIconfontCN <span class="token punctuation">}</span> <span class="token keyword">from</span> <span class="token string">&#39;@ant-design/icons-vue&#39;</span>\n<span class="token keyword">const</span> IconFont <span class="token operator">=</span> <span class="token function">createFromIconfontCN</span><span class="token punctuation">(</span><span class="token punctuation">{</span>\n  scriptUrl<span class="token operator">:</span> <span class="token string">&#39;//at.alicdn.com/t/font_2572336_4hg62uu7hxd.js&#39;</span>\n<span class="token punctuation">}</span><span class="token punctuation">)</span>\n<span class="token function">defineProps</span><span class="token punctuation">(</span><span class="token punctuation">{</span>\n  menuList<span class="token operator">:</span> <span class="token punctuation">{</span>\n    type<span class="token operator">:</span> Array<span class="token punctuation">,</span>\n    <span class="token function-variable function">default</span><span class="token operator">:</span> <span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">=&gt;</span> <span class="token punctuation">[</span><span class="token punctuation">]</span>\n  <span class="token punctuation">}</span>\n<span class="token punctuation">}</span><span class="token punctuation">)</span>\n<span class="token operator">&lt;</span><span class="token operator">/</span>script<span class="token operator">&gt;</span>\n\n</code></pre><div class="line-numbers"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br><span class="line-number">8</span><br><span class="line-number">9</span><br><span class="line-number">10</span><br><span class="line-number">11</span><br><span class="line-number">12</span><br><span class="line-number">13</span><br><span class="line-number">14</span><br><span class="line-number">15</span><br><span class="line-number">16</span><br><span class="line-number">17</span><br><span class="line-number">18</span><br><span class="line-number">19</span><br><span class="line-number">20</span><br><span class="line-number">21</span><br><span class="line-number">22</span><br><span class="line-number">23</span><br><span class="line-number">24</span><br><span class="line-number">25</span><br><span class="line-number">26</span><br><span class="line-number">27</span><br><span class="line-number">28</span><br><span class="line-number">29</span><br><span class="line-number">30</span><br><span class="line-number">31</span><br></div></div><p>效果如下：</p><p><img src="https://p1-juejin.byteimg.com/tos-cn-i-k3u1fbpfcp/f4bb4f55fcc347a3999f9906ec209fe5~tplv-k3u1fbpfcp-watermark.image?" alt="4.png"></p><h5 id="这样我们就实现了动态侧边菜单栏啦" tabindex="-1"><a class="header-anchor" href="#这样我们就实现了动态侧边菜单栏啦" aria-hidden="true">#</a> 这样我们就实现了动态侧边菜单栏啦！</h5><h4 id="结束语" tabindex="-1"><a class="header-anchor" href="#结束语" aria-hidden="true">#</a> 结束语</h4><p>本文章如果对你有所帮助，我很开心，如果有错误或更好的建议欢迎提出！</p>',38),t={render:function(n,s){return p}}}}]);